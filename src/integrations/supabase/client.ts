// This file is automatically generated. Do not edit it directly.
import { createClient, SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get configuration from environment variables
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

// Check if Supabase configuration is available
export const isSupabaseConfigured = !!(SUPABASE_URL && SUPABASE_PUBLISHABLE_KEY);

// Create Supabase client only if configuration is available
let supabaseClient: SupabaseClient<Database> | null = null;

if (isSupabaseConfigured) {
  supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
    }
  });
}

// Export the supabase client - will be null if not configured
// Components should check isSupabaseConfigured before using
export const supabase = supabaseClient;

// Helper function to get supabase client safely
export function getSupabaseClient(): SupabaseClient<Database> {
  if (!supabaseClient) {
    throw new Error('Supabase is not configured. Please check your environment variables or use localStorage mode.');
  }
  return supabaseClient;
}