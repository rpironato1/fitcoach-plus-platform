name: 🧪 Tests & Quality Assurance

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Testes de qualidade de código
  quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔍 TypeScript check
        run: npm run typecheck

      - name: 🔍 ESLint
        run: npm run lint

  # Testes unitários e de integração
  unit-tests:
    name: 🧪 Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🧪 Run tests with coverage
        run: npm run test:coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage
          flags: unittests
          name: codecov-umbrella

  # Build test
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build project
        run: npm run build

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

  # Accessibility and Performance Testing
  accessibility:
    name: ♿ Accessibility & Performance Tests
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Start preview server
        run: npm run preview &
        
      - name: ⏳ Wait for server
        run: |
          echo "Waiting for server to start..."
          timeout 30 bash -c 'until nc -z localhost 8031; do sleep 1; done'
          echo "Server is ready!"

      - name: ♿ Run Lighthouse accessibility audit
        run: npx lighthouse http://localhost:8031 --output=html --output=json --output-path=./lighthouse-accessibility --chrome-flags="--headless --no-sandbox" --preset=desktop --only-categories=accessibility

      - name: 🎯 Run Lighthouse performance audit  
        run: npx lighthouse http://localhost:8031 --output=html --output=json --output-path=./lighthouse-performance --chrome-flags="--headless --no-sandbox" --preset=perf

      - name: 📊 Upload Lighthouse reports
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: |
            lighthouse-accessibility.report.html
            lighthouse-performance.report.html
            lighthouse-accessibility.report.json
            lighthouse-performance.report.json
          retention-days: 30

  # Storybook accessibility testing
  storybook-a11y:
    name: 📖 Storybook Accessibility
    runs-on: ubuntu-latest
    needs: [quality]
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🏗️ Build Storybook
        run: npm run build-storybook

      - name: 🚀 Start Storybook server
        run: npx http-server storybook-static -p 6006 &
        
      - name: ⏳ Wait for Storybook
        run: |
          echo "Waiting for Storybook to start..."
          timeout 30 bash -c 'until nc -z localhost 6006; do sleep 1; done'
          echo "Storybook is ready!"

      - name: ♿ Run Storybook accessibility audit
        run: npx lighthouse http://localhost:6006 --output=html --output=json --output-path=./lighthouse-storybook --chrome-flags="--headless --no-sandbox" --preset=desktop --only-categories=accessibility

      - name: 📊 Upload Storybook reports
        uses: actions/upload-artifact@v4
        with:
          name: storybook-reports  
          path: |
            lighthouse-storybook.html
          retention-days: 30
